<?php

/**
 * Implementation of hook_menu() 
 */
function oneclick_api_menu() {
  $items['waiting'] = array(
    'page callback' => 'oneclick_api_is_waiting',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['get_user_from_client/%'] = array(
    'page callback' => 'oneclick_api_get_user_from_client',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  
  $items['create_sitecon/%'] = array(
    'page callback' => 'oneclick_api_create_sitecon_client',
    'page arguments' => array(1), 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

function oneclick_api_is_waiting() {
  if (module_exists('oneclick_client')) {
    oneclick_client_is_waiting();
  }
  else {
    print $_GET['callback'].'('.json_encode(array('waiting' => TRUE)).')';
  }
}


function oneclick_api_get_user_from_client($domain) {
  $user = db_query(
    "SELECT u.name, u.mail, u.pass 
    FROM {users} u, {node} n, {hosting_client_user} hcu, {hosting_site} hs 
    WHERE hcu.user = u.uid AND hcu.client = hs.client AND hs.nid = n.nid AND u.uid <> 1 AND n.title = :title", 
    array(':title' => $domain)
  )->fetchObject();
  if ($_GET['format'] == 'json') {
    if ($_GET['callback']) {
      print $_GET['callback'].'('.json_encode($user).')';
    }
    else {
      print json_encode($user);
    }
    exit();
  }
  return $user;
}

function oneclick_api_goto($url) {
  if (substr($url, 0, 7) != 'http://') {
    if (substr($url, 0, 1) != '/') {
      $url = '/'.$url;
    }
  }
  print '<html><head><title>redirect</title><meta http-equiv="refresh" content="0;url='.$url.'" /></head><body></body></html>';
  exit();
}

function oneclick_api_create_sitecon_client($id) {
  if (is_numeric($id)) {
    $site = sitecon_get_item($id, 'client');
  }
  else {
    $site = sitecon_get_item_from_domain($id, 'client');
  }

  if ($site){
    if ($_GET['return'] != 'true') {
      drupal_json(array('success' => TRUE));
    }
    if (isset($_GET['next'])) {
      drupal_goto($_GET['next']);
    }
  }
  else {
    if (is_numeric($id)) {
      $site = node_load($id);
      $domain = $site->title;
      $id = $site->nid;
    }
    else {
      $domain = $id;
      $id = NULL;
    }

    _create_sitecon($domain, $id);

    if ($_GET['return'] != 'true') {
      drupal_json(array('success' => TRUE));
    }
    if (isset($_GET['next'])) {
      drupal_goto($_GET['next']);
    }
  }
}

function _create_sitecon($domain, $id = NULL) {
  $privatekey = rand(0, 9999999999);
  $apikey = _get_sitecon_apikey($domain, $privatekey);
  $sitecon = array(
    'id' => $id,
    'type' => 'client',
    'privatekey' => $privatekey,
    'domain' => $domain,
    'apikey' => $apikey,
    'op' => 'create',
  );
  _add_sitecon($sitecon);
}

function _add_sitecon($sitecon) {
  $type = $sitecon['type'];
  //db_query("INSERT INTO sitecon_$type VALUES(%d, '%s', '%s', '%s') ON DUPLICATE KEY UPDATE apikey = '%s', privatekey = '%s'", array($sitecon['id'], md5($sitecon['privatekey']), $sitecon['domain'], $sitecon['apikey'], $sitecon['apikey'], md5($sitecon['privatekey'])));
  db_merge('sitecon_'.$type)
    ->key(array(
      'id' => $sitecon['id'],
      'domain' => $sitecon['domain'],
    ))
    ->fields(array(
      'apikey' => $sitecon['apikey'], 
      'privatekey' => md5($sitecon['privatekey']),
    ))
    ->execute();
}

function _get_sitecon_apikey($server_name, $privatekey) {
  $url = 'http://'.$server_name.'/sitecon/server/get_apikey/'.variable_get('site_name', 'localhost').'/'.md5($privatekey);
  $resp = drupal_http_request($url);
  if ($resp->code == 200) {
    return json_decode($resp->data);
  }
  return NULL;
}


function _user_is_verified($user = NULL) {
  $data = _user_get_data($user);
  return !isset($data['verified']) || $data['verified'];
}

function _user_get_data($user = NULL) {
  if (!$user) {
    global $user;
  }
  return unserialize($user->data);
}
